{"version":3,"sources":["index.js"],"names":["Box","props","mesh","useRef","useState","hovered","setHover","active","setActive","useFrame","current","rotation","x","y","ref","scale","onClick","e","onPointerOver","onPointerOut","attach","args","color","ReactDOM","render","position","document","getElementById"],"mappings":"+LAKA,SAASA,EAAIC,GAEX,IAAMC,EAAOC,mBAFK,EAKUC,oBAAS,GALnB,mBAKXC,EALW,KAKFC,EALE,OAMUF,oBAAS,GANnB,mBAMXG,EANW,KAMHC,EANG,KAWlB,OAFAC,aAAS,kBAAOP,EAAKQ,QAAQC,SAASC,EAAIV,EAAKQ,QAAQC,SAASE,GAAK,OAGnE,0CACMZ,EADN,CAEEa,IAAKZ,EACLa,MAAOR,EAAS,CAAC,IAAK,IAAK,KAAO,CAAC,EAAG,EAAG,GACzCS,QAAS,SAAAC,GAAC,OAAIT,GAAWD,IACzBW,cAAe,SAAAD,GAAC,OAAIX,GAAS,IAC7Ba,aAAc,SAAAF,GAAC,OAAIX,GAAS,MAE5B,uCAAmBc,OAAO,WAAWC,KAAM,CAAC,EAAG,EAAG,KAClD,0CACED,OAAO,WACPE,MAAOjB,EAAU,YAAc,aAMvCkB,IAASC,OACP,kBAAC,IAAD,KACE,uCACA,gCAAYC,SAAU,CAAC,GAAI,GAAI,MAC/B,kBAACzB,EAAD,CAAKyB,SAAU,EAAE,IAAK,EAAG,KACzB,kBAACzB,EAAD,CAAKyB,SAAU,CAAC,IAAK,EAAG,MAE1BC,SAASC,eAAe,U","file":"static/js/main.81bf2714.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport \"./style.css\";\n\nfunction Box(props) {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={e => setActive(!active)}\n      onPointerOver={e => setHover(true)}\n      onPointerOut={e => setHover(false)}\n    >\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n      <meshStandardMaterial\n        attach=\"material\"\n        color={hovered ? \"lawngreen\" : \"hotpink\"}\n      />\n    </mesh>\n  );\n}\n\nReactDOM.render(\n  <Canvas>\n    <ambientLight />\n    <pointLight position={[10, 10, 10]} />\n    <Box position={[-1.2, 0, 0]} />\n    <Box position={[1.2, 0, 0]} />\n  </Canvas>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}